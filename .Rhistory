#read data frm
fin <- read.csv("Future-500.csv")
View(fin)
head(fin)
tail(fin,10)
str(fin)
Summary(fin)
summary(fin)
summary(fin$ID) summary(factor(fin$ID))
summary(fin$ID)
summary(factor(fin$ID))
str(fin$ID)
fin$ID <- factor(fin$ID)
View(fin)
str(fin)
str(fin$ID)
fin$Inception <- factor(fin$Inception)
str(fin$Inception)
summary(fin$Inception)
str(fin)
a <- c("12","13","14","12","12")
a
b <-as.numeric(a)
b
b1 <- as.factor(b)
b1
levels(b1)
z <- factor(c("12","13","14","12","12"))
z
y <-as.numeric(z)
y
z <- factor(c("12","13","14","12","12"))
z
x <- as.numeric(as.character(z))
x
x1 <- factor(x)
x1
head(fin$Profit)
str(fin$Profit)
summary(fin$Profit)
fin$Profit <- factor(fin$Profit)
summary(fin$Profit)
summary(fin$Profit)
fin$Profit <- as.numeric(fin$Profit)
summary(fin$Profit)
head(Profit)
head(fin$Profit)
summary(fin)
#Rev & Exp are numeric data treated as factors.
?gsub
#Pattern Matching and Replacementgrep, grepl, regexpr, gregexpr and regexec search for matches
#to argument pattern within each element of a character vector: they differ in the format of
#and amount of detail in the results.
?sub
#Pattern Matching and Replacementgrep, grepl, regexpr, gregexpr and regexec search for matches
#to argument pattern within each element of a character vector: they differ in the format of
#and amount of detail in the results.
?sub
#when we use gsub it already converts a factor into chars
head(fin$Expenses)
mbh <- "Mera Bharath Mahaan Mera Bharath Mahaan" mbh
mbh <- "Mera Bharath Mahaan Mera Bharath Mahaan"
sub("Mera","Hamara",mbh)
gsub("Mera","Hamara",mbh)
fin$Expenses <- gsub("Dollers","",fin$Expenses)
head(fin$Expenses)
fin$Expenses <- gsub(",","",fin$Expenses)
head(fin$Expenses)
str(fin$Expenses)
fin$Revenue <- gsub("$","",fin$Revenue)
head(fin$Revenue)
fin$Revenue <- gsub("\\$","",fin$Revenue)
head(fin$Revenue)
fin$Revenue <- gsub(",","",fin$Revenue)
head(fin$Revenue)
#[1] "9684527 "  "14016543 " "9746272 "  "15359369 " "8567910 "  "12805452 "
#remove , .
str(fin$Revenue)
#we repeat the same for growth
head(fin$Growth)
fin$Growth <- gsub("%","",fin$Growth)
head(fin$Growth)
str(fin$Growth)
fin$Expenses<- as.numeric(fin$Expenses)
fin$Expenses <- as.numeric(fin$Expenses)
fin$Revenue <- as.numeric(fin$Revenue)
fin$Growth <- as.numeric(fin$Growth)
summary(fin)
#notice now revenue, expences and growth are  numeric
str(fin)
TRUE == FALSE
TRUE == 5
TRUE == 1
FALSE == FALSE
FALSE == 0
NA == TRUE
NA == 15
NA == NA
NA == NULL
#locating missing data
head(fin,24)
?complete.cases
complete.cases(fin)
!complete.cases(fin)
fin[!complete.cases(fin),]
#***
head(fin,24)
nrow(fin)
fin <- read.csv("Future-500.csv", na.strings = c(""))
head(fin,24)
fin$Expenses <- gsub(" Dollars","",fin$Expenses) fin$Expenses <- gsub(",","",fin$Expenses) fin$Revenue <- gsub("\\$","",fin$Revenue) fin$Revenue <- gsub(",","",fin$Revenue) fin$Growth <- gsub("%","",fin$Growth) fin$Expenses <- as.numeric(fin$Expenses) fin$Revenue <- as.numeric(fin$Revenue) fin$Growth <- as.numeric(fin$Growth)
fin$Expenses <- gsub(" Dollars","",fin$Expenses) fin$Expenses <- gsub(",","",fin$Expenses) fin$Revenue <- gsub("\\$","",fin$Revenue) fin$Revenue <- gsub(",","",fin$Revenue) fin$Growth <- gsub("%","",fin$Growth) fin$Expenses <- as.numeric(fin$Expenses) fin$Revenue <- as.numeric(fin$Revenue) fin$Growth <- as.numeric(fin$Growth)
fin$Expenses <- gsub(" Dollars","",fin$Expenses) fin$Expenses <- gsub(",","",fin$Expenses) fin$Revenue <- gsub("\\$","",fin$Revenue) fin$Revenue <- gsub(",","",fin$Revenue) fin$Growth <- gsub("%","",fin$Growth) fin$Expenses <- as.numeric(fin$Expenses) fin$Revenue <- as.numeric(fin$Revenue) fin$Growth <- as.numeric(fin$Growth)
fin$Expenses <- gsub(" Dollars","",fin$Expenses) fin$Expenses <- gsub(",","",fin$Expenses) fin$Revenue <- gsub("\\$","",fin$Revenue) fin$Revenue <- gsub(",","",fin$Revenue) fin$Growth <- gsub("%","",fin$Growth) fin$Expenses <- as.numeric(fin$Expenses) fin$Revenue <- as.numeric(fin$Revenue) fin$Growth <- as.numeric(fin$Growth)
fin$Expenses <- gsub(" Dollars","",fin$Expenses)
fin$Expenses <- gsub(" Dollars","",fin$Expenses)
fin$Expenses <- gsub(",","",fin$Expenses)
fin$Revenue <- gsub("\\$","",fin$Revenue)
fin$Revenue <- gsub(",","",fin$Revenue)
fin$Growth <- gsub("%","",fin$Growth)
fin$Expenses <- as.numeric(fin$Expenses)
fin$Revenue <- as.numeric(fin$Revenue)
fin$Growth <- as.numeric(fin$Growth)
fin[!complete.cases(fin),]
str(fin)
#Filtering: using which() for non-missing data
head(fin)
fin[!complete.cases(fin),]
fin[fin$Revenue==9746272]
fin[fin$Revenue==9746272,]
NA == 9746272
9746272 == NA
?which
fin[fin$Revenue == 9746272,]
which(fin$Revenue==9746272)
fin[which(fin$Revenue==9746272),]
filter = fin$Employees == 45 fin[filter,]
filter = fin$Employees == 45, fin[filter,]
filter = fin$Employees == 45
fin[filter,]
fin[which(filter),]
#now we will pick up those rows whic have NAs
head(fin)
fin$Expenses == NA
fin[fin$Expenses == NA,]
?is.na
a <- c(a,b,c,NA,76)
a
is.na(a)
a <- c(1,24,56,NA,76)
a
is.na(a)
is.na(fin$Expenses)
fin[is.na(fin$Expenses),]
#repeat this process for state col or other cols.
fin_backup <- fin nrow(fin)
#repeat this process for state col or other cols.
fin_backup <- fin
nrow(fin)
fin[!complete.cases(fin),]
fin[is.na(fin$Industry),]
head(fin,20)
nrow(fin[is.na(fin$Industry),])
#[1] 2
nrow(fin[!complete.cases(fin),])
nrow(fin[!complete.cases(fin$Industry),])
nrow(fin)
fin <- is.na(fin$Industry)
fin <- fin[!is.na(fin$Industry),]
fin <- fin[!is.na(fin$Industry),]
fin <- fin[!is.na(fin$Industry),]
nrow(fin)
nrow(fin)
nrow(fin[!complete.cases(fin$Industry),])
#[1] 2
nrow(fin[!complete.cases(fin),])
fin[is.na(fin$Industry),]
